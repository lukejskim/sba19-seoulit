import this

# 파이썬이 설계원칙

'''
    # Zen of Python 
    # =============== 
    # :: 
    # 아름다운 것은 못생긴 것보다 낫다. 
    # 암시 적보다 암묵적인 것이 낫습니다. 
    # 단순함은 복잡한 것보다 낫습니다. 
    # Compolex(이해하기 어려운)은 complicated(이해&다루기 어려운)보다 낫습니다. 
    # Flat(얇은)은 nested(중첩) 된 것보다 낫다. 
    # Sparse(일부 밀집도가 높은)가 dense (전체적 밀집도가 높은)보다 좋습니다. 
    # 가독성이 중요합니다. 
    # 특별한 경우는 규칙을 어기는 데 충분하지 않습니다. 
    # 실용성은 순결을 능가하지만. 
    # 오류는 자동으로 전달해서는 안됩니다. 
    # 명시 적으로 침묵하지 않는 한. 
    # 모호함에 직면하여 추측하려는 유혹을 거부하십시오. 
    # 그 중 하나가 있어야하며, 바람직하게는 오직 한 가지 방법 만 있어야합니다. 
    # 당신이 네덜란드 인이 아니라면 처음에는 그 방법이 분명하지 않을 수도 있습니다. 
    # 이제는 결코 결코 낫지 않습니다. 
    # * 지금은 종종 * 오른쪽 *보다 나은 경우는 없지만. 
    # 구현이 설명하기 어렵다면 나쁜 생각입니다. 
    # 구현이 설명하기 쉽다면 좋은 생각 일 수 있습니다. 
    # 네임 스페이스는 훌륭한 아이디어를 제공하는 것입니다.
'''


'''
못생긴 것 보다 아름다운 것이 더 낫다.
	=> 자신이 일년전에 작성했던 백줄 이상의 쉘코드나 perl 코드를 이해하려면 다시 작성하는 느낌이 듭니다.
함축적인 것 보다 분명한 것이 더 낫다.
	=> 너무 많은 의미를 내포하고 있으면 그만큼 더 복잡하고 이해하기 어려워 집니다.
복잡한 것 보다 간단한 것이 더 낫다.
	=> 당연한 것인데 우리는 문제를 너무 어렵게 접근해서 푸는 경향이 있습니다.
중첩된 것 보다 일렬로 있는게 더 낫다.
	=> 위의 복잡도를 낮추는데 도움이 됩니다.
빡빡한 것 보다 널널한게 더 낫다.
	=> 코드를 봐도 그렇지요.
가독성이 중요하다.
	=> 남이 만든 코드 뿐만 아니라 자기가 만든 것을 시간이 지난 후 리뷰할 때도 정말 중요합니다.
		doxygen 과 딱 붙는 __doc__ 은 정말 이용해 보면 감탄스럽습니다.
특별한 경우가 많을 수록 정해진 규칙을 깨기 쉽다.
	=> 규칙에 예외가 너무 많다면? 어렵겠죠잉~
실용적인 것이 원론보다 더 낫다.
	=> 쉽게 작성해보고 테스트하는 만큼 좋은 생산성이 없습니다.
오류는 결코 어디서 발생했는지 나타나야 합니다.
	=> 모든 오류의 발생 지점을 쉽게 알 수 있습니다. (Try, Exception을 지원하는 언어에서 공통)
경우에 따라서 분명하게 오류 발생을 억제시킬 수 있다. 
	=> 필요에 따라서 예외 발생을 숨길 필요가 있습니다.
프로그램에서 모호성이 발견된다면 코드를 상상하려하면 안된다.
	=> 모호성을 유발하는 perl 같은 경우 자주 발생하기도 합니다. (저는 perl을 십년 이상 사용해 왔습니다)
어떤 코드를 작성하는데 있어 그 방법을 해결하는 (최상의) 방법은 한가지 방법으로 풀어야 합니다.
	=> perl의 한가지 이상의 동일한 문제 해결방법의 철학과 대조되는 부분입니다.
일부러 문제를 복잡하게 풀 이유는 없습니다.
	=> 당연합니다.
안하는 것보다 당장 하는 것이 낫습니다.
	=> 철학적이네요..  이런 저런 문제 때문에 하기 힘들다... 이 알고리듬은 구현하기 까탈스럽다... 걱정만 하지 말고 
		바로 파이썬으로 슈도코드를 작성하듯이 테스트를 해 보세요~ (그렇다고 생각없이 구현에 들어가란 말은 아닙니다)
때로는 (지금) 당장 해야 하느니 안 하는 것이 나을 경우도 있기는 합니다.
	=> 너무 빨리 빨리 하다가 일을 그르칠 수도 있겠지요.
구현된 것을 설명하기에 너무 어렵게 했다면 좋은 구현이 아니지요.
	=> 지당하신 말씀입니다.
반대로 구현한 것을 쉽게 설명한다면 좋은 구현입니다.
	=> 파이썬 코드 자체로 슈도코드 역할을 하기도 합니다.
네임스페이스라는 것은 아주 훌륭한 아이디어 입니다.
	=> 파이썬에서의 클래스를 포함하여 모든 것이 네임스페이스로 되어 있습니다.
		그 진가는 런타임 바인딩 등의 개념이 몸으로 느껴지는 순간 발휘됩니다.

'''